[tool:pytest]
# Pytest configuration for MHM testing framework

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers for test categorization
markers =
    # Core test types
    unit: Unit tests for individual functions
    integration: Integration tests across modules
    behavior: Behavior tests for real system functionality
    ui: Tests for UI components
    
    # Performance & resource markers
    slow: Slow-running tests
    performance: Performance and load testing
    memory: Memory-intensive tests
    network: Tests requiring network connectivity
    external: Tests requiring external services (Discord, email, etc.)
    file_io: Tests with heavy file operations
    
    # Feature-specific markers
    ai: Tests requiring AI functionality
    service: Tests for service functionality
    communication: Tests for communication channels
    config: Configuration and settings tests
    tasks: Task management functionality tests
    checkins: Check-in system tests
    schedules: Schedule management tests
    messages: Message system tests
    analytics: Analytics and reporting tests
    user_management: User account management tests
    channels: Communication channel tests
    
    # Test quality markers
    flaky: Tests that may occasionally fail (need investigation)
    known_issue: Tests for known bugs or limitations
    regression: Tests that catch regression issues
    smoke: Basic functionality smoke tests
    critical: Critical path tests that must always pass
    
    # Development workflow markers
    wip: Work in progress tests
    todo: Tests that need to be implemented
    skip_ci: Tests to skip in CI/CD pipeline
    manual: Tests requiring manual intervention
    debug: Debug-specific tests

# Test execution options
addopts = 
    --strict-markers
    --disable-warnings
    --tb=short
    --color=yes
    --durations=10
    --strict-config
    --strict-markers
    --verbose
    --tb=short
    --maxfail=10
    --durations=10
    --durations-min=0.1

# Test environment
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning
    ignore:Duplicate name:zipfile:UserWarning
    ignore::FutureWarning
    ignore:.*unclosed.*:ResourceWarning
    ignore:.*I/O operation on closed file.*:ValueError
    ignore:.*There is no current event loop.*:DeprecationWarning

# Coverage settings (when using --cov)
# Note: Coverage options are added via command line when --coverage is used

# Test isolation
# Each test function gets a fresh environment
pythonpath = .

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test collection
collect_ignore = 
    tests/__pycache__
    tests/.pytest_cache
    tests/logs/
    tests/data/
    tests/temp/
    tests/fixtures/
    **/__pycache__
    **/.pytest_cache
    **/*.pyc
    **/*.pyo

# Minimum version requirements
minversion = 6.0

# Test timeout (for slow tests)
timeout = 300

# Parallel execution (if pytest-xdist is installed)
# addopts = -n auto

# Test result caching
cache_dir = .pytest_cache 